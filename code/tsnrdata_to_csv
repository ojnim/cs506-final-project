#!/usr/bin/env python

import os
import re
import pandas as pd
import numpy as np
import nibabel as nib


img_list = [os.path.join(root, f) for root, dirs, files in os.walk('../data/derivatives/tsnr/') for f in files if f.endswith('_tsnr.nii.gz')]

img_list.sort(key=lambda x: (os.path.basename(x)))


print("Image files found:", img_list)


plot_data = pd.DataFrame(columns=['Voxel Value', 'Task', 'Subject'])


subjects = []

for img in img_list:
    try:
        sub = re.search('sub-(.*?)_task', img).group(1)
        task = re.search('_task-(.*?)_', img).group(1)
        tsnr = img  
        

        if os.path.exists(tsnr):
            print(f"Processing {tsnr} for Subject {sub} and Task {task}")
            img_data = nib.load(tsnr)
            voxel_data = img_data.get_fdata().flatten()
            subjects = [f'sub-{sub}'] * len(voxel_data)  
            
            temp_df = pd.DataFrame({
                'Voxel Value': voxel_data,
                'Task': task,
                'Subject': subjects
            })
            plot_data = pd.concat([plot_data, temp_df], ignore_index=True)
        else:
            print(f"File {tsnr} does not exist.")
    except Exception as e:
        print(f"Error processing file {img}: {e}")

plot_data.to_csv('../data_for_analysis/tsnr_voxel_data.csv', index=False)
