#!/usr/bin/env python

# Script for ploting an image of the mean single-trial estimates for each task

# Adapted from code available in the GitHub repository (https://github.com/GttNeuro/Guo-Lab_datapaper)


import os
import nibabel as nib
import pandas as pd
from nilearn.image import mean_img
import numpy as np
import re  

root = '../data/derivatives/singletrial'
output_dir = '../data_for_analysis'


data = []
for sub in os.listdir(root):

    if '001' <= sub.split('-')[1] <= '077':
        sub_dir = os.path.join(root, sub)
        if os.path.isdir(sub_dir):
            for file in os.listdir(sub_dir):

                if file.endswith('singletrial-Act.nii.gz') and 'task-LanguageControl' in file:
                    task = re.search('task-(.*)_run', file).group(1)
                    file_path = os.path.join(sub_dir, file)
                    data.append([sub, task, file_path])

df = pd.DataFrame(data, columns=['sub', 'task', 'image'])

task = 'LanguageControl'
task_images = df[df['task'] == task]['image'].tolist()
if task_images:
    mean_image = mean_img(task_images)
    
    # Get image data and affine
    mean_data = mean_image.get_fdata()
    affine = mean_image.affine

    # Flatten data and get voxel coordinates
    nonzero_indices = np.argwhere(mean_data != 0)
    voxel_values = mean_data[mean_data != 0]

    # Convert voxel indices to MNI coordinates
    mni_coords = nib.affines.apply_affine(affine, nonzero_indices)

    # Save to CSV
    csv_data = pd.DataFrame({
        'x': mni_coords[:, 0],
        'y': mni_coords[:, 1],
        'z': mni_coords[:, 2],
        'value': voxel_values
    })

    csv_path = os.path.join(output_dir, f'Mean-z_task-{task}_vmax03.csv')
    csv_data.to_csv(csv_path, index=False)

print("Image have been saved in:", output_dir)
